/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define B_B 0
#define M_B 1
#define B_M 2
#define M_N 3
#define S_M 4

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define B0 BT_SEL 0
#define B1 BT_SEL 1
#define B2 BT_SEL 2
#define BC BT_CLR

#define SPA SPACE
#define BSP BACKSPACE
#define COM COMMA
#define SEM SEMI
#define FSL FSLH

#define mp_LOP &kp LEFT_ALT
#define mp_LCT &kp LEFT_CONTROL
#define mp_LCM &kp LEFT_GUI
#define mp_LSH &kp LEFT_SHIFT

#define mp_RSH &kp RIGHT_SHIFT
#define mp_RCM &kp RIGHT_GUI
#define mp_RCT &kp RIGHT_CONTROL
#define mp_ROP &kp RIGHT_ALT

#define K_1 KP_NUMBER_1
#define K_2 KP_NUMBER_2
#define K_3 KP_NUMBER_3
#define K_4 KP_NUMBER_4
#define K_5 KP_NUMBER_5
#define K_6 KP_NUMBER_6
#define K_7 KP_NUMBER_7
#define K_8 KP_NUMBER_8
#define K_9 KP_NUMBER_9
#define K_0 KP_NUMBER_0

#define K_A KP_ASTERISK
#define K_S KP_SLASH
#define K_D KP_DOT
#define K_P KP_PLUS
#define K_M KP_MINUS

/////// /////// /////// /////// /////// /////// /////// /////// /////// /////// /////// ///////

/ {
    macros {
    };
    keymap {
        compatible = "zmk,keymap";

        base_base_layer {
            label = "BASE_BASE";
            bindings = <
&kp TAB &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P   &kp BSP
&kp ESC &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L   &kp SEM &kp SQT
&none   &kp Z   &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   &kp COM &kp DOT &kp FSL &none
                        &none   &mo M_B &kp SPA &kp RET &mo B_M &none
            >;
        };

        mod_base_layer {
            label = "MOD_BASE";
            bindings = <
&none   &bt BC  &bt B0  &bt B1  &bt B2  &none   &kp Y   &kp U   &kp I   &kp O   &kp P   &kp BSP
&none   mp_LOP  mp_LCT  mp_LCM  mp_LSH  &none   &kp H   &kp J   &kp K   &kp L   &kp SEM &kp SQT
&none   &none   &none   &none   &none   &none   &kp N   &kp M   &kp COM &kp DOT &kp FSL &none
                        &none   &trans  &kp SPA &kp RET &none   &none
            >;
        };

        base_mod_layer {
            label = "BASE_MOD";
            bindings = <
&kp TAB &kp Q   &kp W   &kp E   &kp R   &kp T   &none   &none   &none   &none   &none   &none
&kp ESC &kp A   &kp S   &kp D   &kp F   &kp G   &none   mp_RSH  mp_RCM  mp_RCT  mp_ROP &none
&none   &kp Z   &kp X   &kp C   &kp V   &kp B   &none   &none   &none   &none   &none   &none
                        &none   &none   &kp SPA &kp RET &trans  &none
            >;
        };

        mod_number_layer {
            label = "MOD_NUMBER";
            bindings = <
&none   &bt BC  &bt B0  &bt B1  &bt B2  &none   &none   &kp K_7 &kp K_8 &kp K_9 &kp K_A &kp BSP
&none   mp_LOP  mp_LCT  mp_LCM  mp_LSH  &none   &none   &kp K_4 &kp K_5 &kp K_6 &kp K_S &kp K_P
&none   &none   &none   &none   &none   &none   &kp K_0 &kp K_1 &kp K_2 &kp K_3 &kp K_D &kp K_M
                        &none   &trans  &kp SPA &kp RET &none   &none
            >;
        };

        special_mod_layer {
            label = "SPECIAL_MOD";
            bindings = <
&kp TAB &kp Q   &kp W   &kp E   &kp R   &kp T   &none   &none   &none   &none   &none   &none
&kp ESC &kp A   &kp S   &kp D   &kp F   &kp G   &none   mp_RSH  mp_RCM  mp_RCT  mp_ROP  &none
&none   &kp Z   &kp X   &kp C   &kp V   &kp B   &none   &none   &none   &none   &none   &none
                        &none   &none   &kp SPA &kp RET &trans  &none
            >;
        };
    };
};
